/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IBattingpost extends Serializable {

    /**
     * Setter for <code>baseballdb.BattingPost.yearID</code>.
     */
    public IBattingpost setYearid(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.yearID</code>.
     */
    public Integer getYearid();

    /**
     * Setter for <code>baseballdb.BattingPost.round</code>.
     */
    public IBattingpost setRound(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.round</code>.
     */
    public String getRound();

    /**
     * Setter for <code>baseballdb.BattingPost.playerID</code>.
     */
    public IBattingpost setPlayerid(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.playerID</code>.
     */
    public String getPlayerid();

    /**
     * Setter for <code>baseballdb.BattingPost.teamID</code>.
     */
    public IBattingpost setTeamid(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.teamID</code>.
     */
    public String getTeamid();

    /**
     * Setter for <code>baseballdb.BattingPost.lgID</code>.
     */
    public IBattingpost setLgid(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.lgID</code>.
     */
    public String getLgid();

    /**
     * Setter for <code>baseballdb.BattingPost.G</code>.
     */
    public IBattingpost setG(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.G</code>.
     */
    public Integer getG();

    /**
     * Setter for <code>baseballdb.BattingPost.AB</code>.
     */
    public IBattingpost setAb(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.AB</code>.
     */
    public Integer getAb();

    /**
     * Setter for <code>baseballdb.BattingPost.R</code>.
     */
    public IBattingpost setR(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.R</code>.
     */
    public Integer getR();

    /**
     * Setter for <code>baseballdb.BattingPost.H</code>.
     */
    public IBattingpost setH(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.H</code>.
     */
    public Integer getH();

    /**
     * Setter for <code>baseballdb.BattingPost.2B</code>.
     */
    public IBattingpost set_2b(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.2B</code>.
     */
    public Integer get_2b();

    /**
     * Setter for <code>baseballdb.BattingPost.3B</code>.
     */
    public IBattingpost set_3b(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.3B</code>.
     */
    public Integer get_3b();

    /**
     * Setter for <code>baseballdb.BattingPost.HR</code>.
     */
    public IBattingpost setHr(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.HR</code>.
     */
    public Integer getHr();

    /**
     * Setter for <code>baseballdb.BattingPost.RBI</code>.
     */
    public IBattingpost setRbi(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.RBI</code>.
     */
    public Integer getRbi();

    /**
     * Setter for <code>baseballdb.BattingPost.SB</code>.
     */
    public IBattingpost setSb(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.SB</code>.
     */
    public Integer getSb();

    /**
     * Setter for <code>baseballdb.BattingPost.CS</code>.
     */
    public IBattingpost setCs(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.CS</code>.
     */
    public String getCs();

    /**
     * Setter for <code>baseballdb.BattingPost.BB</code>.
     */
    public IBattingpost setBb(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.BB</code>.
     */
    public Integer getBb();

    /**
     * Setter for <code>baseballdb.BattingPost.SO</code>.
     */
    public IBattingpost setSo(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.SO</code>.
     */
    public Integer getSo();

    /**
     * Setter for <code>baseballdb.BattingPost.IBB</code>.
     */
    public IBattingpost setIbb(Integer value);

    /**
     * Getter for <code>baseballdb.BattingPost.IBB</code>.
     */
    public Integer getIbb();

    /**
     * Setter for <code>baseballdb.BattingPost.HBP</code>.
     */
    public IBattingpost setHbp(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.HBP</code>.
     */
    public String getHbp();

    /**
     * Setter for <code>baseballdb.BattingPost.SH</code>.
     */
    public IBattingpost setSh(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.SH</code>.
     */
    public String getSh();

    /**
     * Setter for <code>baseballdb.BattingPost.SF</code>.
     */
    public IBattingpost setSf(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.SF</code>.
     */
    public String getSf();

    /**
     * Setter for <code>baseballdb.BattingPost.GIDP</code>.
     */
    public IBattingpost setGidp(String value);

    /**
     * Getter for <code>baseballdb.BattingPost.GIDP</code>.
     */
    public String getGidp();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IBattingpost
     */
    public void from(io.corbs.baseballdb.schema.tables.interfaces.IBattingpost from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IBattingpost
     */
    public <E extends io.corbs.baseballdb.schema.tables.interfaces.IBattingpost> E into(E into);
}
