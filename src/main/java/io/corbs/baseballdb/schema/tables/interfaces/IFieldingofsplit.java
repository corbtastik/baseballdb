/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFieldingofsplit extends Serializable {

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.playerID</code>.
     */
    public IFieldingofsplit setPlayerid(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.playerID</code>.
     */
    public String getPlayerid();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.yearID</code>.
     */
    public IFieldingofsplit setYearid(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.yearID</code>.
     */
    public Integer getYearid();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.stint</code>.
     */
    public IFieldingofsplit setStint(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.stint</code>.
     */
    public Integer getStint();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.teamID</code>.
     */
    public IFieldingofsplit setTeamid(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.teamID</code>.
     */
    public String getTeamid();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.lgID</code>.
     */
    public IFieldingofsplit setLgid(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.lgID</code>.
     */
    public String getLgid();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.POS</code>.
     */
    public IFieldingofsplit setPos(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.POS</code>.
     */
    public String getPos();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.G</code>.
     */
    public IFieldingofsplit setG(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.G</code>.
     */
    public Integer getG();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.GS</code>.
     */
    public IFieldingofsplit setGs(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.GS</code>.
     */
    public Integer getGs();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.InnOuts</code>.
     */
    public IFieldingofsplit setInnouts(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.InnOuts</code>.
     */
    public Integer getInnouts();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.PO</code>.
     */
    public IFieldingofsplit setPo(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.PO</code>.
     */
    public Integer getPo();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.A</code>.
     */
    public IFieldingofsplit setA(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.A</code>.
     */
    public Integer getA();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.E</code>.
     */
    public IFieldingofsplit setE(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.E</code>.
     */
    public Integer getE();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.DP</code>.
     */
    public IFieldingofsplit setDp(Integer value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.DP</code>.
     */
    public Integer getDp();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.PB</code>.
     */
    public IFieldingofsplit setPb(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.PB</code>.
     */
    public String getPb();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.WP</code>.
     */
    public IFieldingofsplit setWp(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.WP</code>.
     */
    public String getWp();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.SB</code>.
     */
    public IFieldingofsplit setSb(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.SB</code>.
     */
    public String getSb();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.CS</code>.
     */
    public IFieldingofsplit setCs(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.CS</code>.
     */
    public String getCs();

    /**
     * Setter for <code>baseballdb.FieldingOFsplit.ZR</code>.
     */
    public IFieldingofsplit setZr(String value);

    /**
     * Getter for <code>baseballdb.FieldingOFsplit.ZR</code>.
     */
    public String getZr();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IFieldingofsplit
     */
    public void from(io.corbs.baseballdb.schema.tables.interfaces.IFieldingofsplit from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IFieldingofsplit
     */
    public <E extends io.corbs.baseballdb.schema.tables.interfaces.IFieldingofsplit> E into(E into);
}
