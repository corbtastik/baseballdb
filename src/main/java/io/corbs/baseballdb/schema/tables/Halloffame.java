/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables;


import io.corbs.baseballdb.schema.Baseballdb;
import io.corbs.baseballdb.schema.tables.records.HalloffameRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Halloffame extends TableImpl<HalloffameRecord> {

    private static final long serialVersionUID = 963659679;

    /**
     * The reference instance of <code>baseballdb.HallOfFame</code>
     */
    public static final Halloffame HALLOFFAME = new Halloffame();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HalloffameRecord> getRecordType() {
        return HalloffameRecord.class;
    }

    /**
     * The column <code>baseballdb.HallOfFame.playerID</code>.
     */
    public final TableField<HalloffameRecord, String> PLAYERID = createField("playerID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HallOfFame.yearid</code>.
     */
    public final TableField<HalloffameRecord, Integer> YEARID = createField("yearid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HallOfFame.votedBy</code>.
     */
    public final TableField<HalloffameRecord, String> VOTEDBY = createField("votedBy", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HallOfFame.ballots</code>.
     */
    public final TableField<HalloffameRecord, Integer> BALLOTS = createField("ballots", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HallOfFame.needed</code>.
     */
    public final TableField<HalloffameRecord, Integer> NEEDED = createField("needed", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HallOfFame.votes</code>.
     */
    public final TableField<HalloffameRecord, Integer> VOTES = createField("votes", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HallOfFame.inducted</code>.
     */
    public final TableField<HalloffameRecord, String> INDUCTED = createField("inducted", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HallOfFame.category</code>.
     */
    public final TableField<HalloffameRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HallOfFame.needed_note</code>.
     */
    public final TableField<HalloffameRecord, String> NEEDED_NOTE = createField("needed_note", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>baseballdb.HallOfFame</code> table reference
     */
    public Halloffame() {
        this("HallOfFame", null);
    }

    /**
     * Create an aliased <code>baseballdb.HallOfFame</code> table reference
     */
    public Halloffame(String alias) {
        this(alias, HALLOFFAME);
    }

    private Halloffame(String alias, Table<HalloffameRecord> aliased) {
        this(alias, aliased, null);
    }

    private Halloffame(String alias, Table<HalloffameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Baseballdb.BASEBALLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Halloffame as(String alias) {
        return new Halloffame(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Halloffame rename(String name) {
        return new Halloffame(name, null);
    }
}
