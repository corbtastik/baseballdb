/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.records;


import io.corbs.baseballdb.schema.tables.Battingpost;
import io.corbs.baseballdb.schema.tables.interfaces.IBattingpost;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BattingpostRecord extends TableRecordImpl<BattingpostRecord> implements Record22<Integer, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, String, Integer, Integer, Integer, String, String, String, String>, IBattingpost {

    private static final long serialVersionUID = 1005497149;

    /**
     * Setter for <code>baseballdb.BattingPost.yearID</code>.
     */
    @Override
    public BattingpostRecord setYearid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.yearID</code>.
     */
    @Override
    public Integer getYearid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.round</code>.
     */
    @Override
    public BattingpostRecord setRound(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.round</code>.
     */
    @Override
    public String getRound() {
        return (String) get(1);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.playerID</code>.
     */
    @Override
    public BattingpostRecord setPlayerid(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.playerID</code>.
     */
    @Override
    public String getPlayerid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.teamID</code>.
     */
    @Override
    public BattingpostRecord setTeamid(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.teamID</code>.
     */
    @Override
    public String getTeamid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.lgID</code>.
     */
    @Override
    public BattingpostRecord setLgid(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.lgID</code>.
     */
    @Override
    public String getLgid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.G</code>.
     */
    @Override
    public BattingpostRecord setG(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.G</code>.
     */
    @Override
    public Integer getG() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.AB</code>.
     */
    @Override
    public BattingpostRecord setAb(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.AB</code>.
     */
    @Override
    public Integer getAb() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.R</code>.
     */
    @Override
    public BattingpostRecord setR(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.R</code>.
     */
    @Override
    public Integer getR() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.H</code>.
     */
    @Override
    public BattingpostRecord setH(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.H</code>.
     */
    @Override
    public Integer getH() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.2B</code>.
     */
    @Override
    public BattingpostRecord set_2b(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.2B</code>.
     */
    @Override
    public Integer get_2b() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.3B</code>.
     */
    @Override
    public BattingpostRecord set_3b(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.3B</code>.
     */
    @Override
    public Integer get_3b() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.HR</code>.
     */
    @Override
    public BattingpostRecord setHr(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.HR</code>.
     */
    @Override
    public Integer getHr() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.RBI</code>.
     */
    @Override
    public BattingpostRecord setRbi(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.RBI</code>.
     */
    @Override
    public Integer getRbi() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.SB</code>.
     */
    @Override
    public BattingpostRecord setSb(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.SB</code>.
     */
    @Override
    public Integer getSb() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.CS</code>.
     */
    @Override
    public BattingpostRecord setCs(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.CS</code>.
     */
    @Override
    public String getCs() {
        return (String) get(14);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.BB</code>.
     */
    @Override
    public BattingpostRecord setBb(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.BB</code>.
     */
    @Override
    public Integer getBb() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.SO</code>.
     */
    @Override
    public BattingpostRecord setSo(Integer value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.SO</code>.
     */
    @Override
    public Integer getSo() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.IBB</code>.
     */
    @Override
    public BattingpostRecord setIbb(Integer value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.IBB</code>.
     */
    @Override
    public Integer getIbb() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.HBP</code>.
     */
    @Override
    public BattingpostRecord setHbp(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.HBP</code>.
     */
    @Override
    public String getHbp() {
        return (String) get(18);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.SH</code>.
     */
    @Override
    public BattingpostRecord setSh(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.SH</code>.
     */
    @Override
    public String getSh() {
        return (String) get(19);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.SF</code>.
     */
    @Override
    public BattingpostRecord setSf(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.SF</code>.
     */
    @Override
    public String getSf() {
        return (String) get(20);
    }

    /**
     * Setter for <code>baseballdb.BattingPost.GIDP</code>.
     */
    @Override
    public BattingpostRecord setGidp(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.BattingPost.GIDP</code>.
     */
    @Override
    public String getGidp() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Integer, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, String, Integer, Integer, Integer, String, String, String, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Integer, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, String, Integer, Integer, Integer, String, String, String, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Battingpost.BATTINGPOST.YEARID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Battingpost.BATTINGPOST.ROUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Battingpost.BATTINGPOST.PLAYERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Battingpost.BATTINGPOST.TEAMID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Battingpost.BATTINGPOST.LGID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Battingpost.BATTINGPOST.G;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Battingpost.BATTINGPOST.AB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Battingpost.BATTINGPOST.R;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Battingpost.BATTINGPOST.H;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Battingpost.BATTINGPOST._2B;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Battingpost.BATTINGPOST._3B;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Battingpost.BATTINGPOST.HR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Battingpost.BATTINGPOST.RBI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return Battingpost.BATTINGPOST.SB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Battingpost.BATTINGPOST.CS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field16() {
        return Battingpost.BATTINGPOST.BB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field17() {
        return Battingpost.BATTINGPOST.SO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field18() {
        return Battingpost.BATTINGPOST.IBB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return Battingpost.BATTINGPOST.HBP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field20() {
        return Battingpost.BATTINGPOST.SH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field21() {
        return Battingpost.BATTINGPOST.SF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field22() {
        return Battingpost.BATTINGPOST.GIDP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getYearid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRound();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPlayerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTeamid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLgid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getG();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getAb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getR();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getH();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return get_2b();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return get_3b();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getHr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getRbi();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getSb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getCs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value16() {
        return getBb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value17() {
        return getSo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value18() {
        return getIbb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getHbp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value20() {
        return getSh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value21() {
        return getSf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value22() {
        return getGidp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value1(Integer value) {
        setYearid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value2(String value) {
        setRound(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value3(String value) {
        setPlayerid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value4(String value) {
        setTeamid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value5(String value) {
        setLgid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value6(Integer value) {
        setG(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value7(Integer value) {
        setAb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value8(Integer value) {
        setR(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value9(Integer value) {
        setH(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value10(Integer value) {
        set_2b(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value11(Integer value) {
        set_3b(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value12(Integer value) {
        setHr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value13(Integer value) {
        setRbi(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value14(Integer value) {
        setSb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value15(String value) {
        setCs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value16(Integer value) {
        setBb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value17(Integer value) {
        setSo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value18(Integer value) {
        setIbb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value19(String value) {
        setHbp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value20(String value) {
        setSh(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value21(String value) {
        setSf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord value22(String value) {
        setGidp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BattingpostRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11, Integer value12, Integer value13, Integer value14, String value15, Integer value16, Integer value17, Integer value18, String value19, String value20, String value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IBattingpost from) {
        setYearid(from.getYearid());
        setRound(from.getRound());
        setPlayerid(from.getPlayerid());
        setTeamid(from.getTeamid());
        setLgid(from.getLgid());
        setG(from.getG());
        setAb(from.getAb());
        setR(from.getR());
        setH(from.getH());
        set_2b(from.get_2b());
        set_3b(from.get_3b());
        setHr(from.getHr());
        setRbi(from.getRbi());
        setSb(from.getSb());
        setCs(from.getCs());
        setBb(from.getBb());
        setSo(from.getSo());
        setIbb(from.getIbb());
        setHbp(from.getHbp());
        setSh(from.getSh());
        setSf(from.getSf());
        setGidp(from.getGidp());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IBattingpost> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BattingpostRecord
     */
    public BattingpostRecord() {
        super(Battingpost.BATTINGPOST);
    }

    /**
     * Create a detached, initialised BattingpostRecord
     */
    public BattingpostRecord(Integer yearid, String round, String playerid, String teamid, String lgid, Integer g, Integer ab, Integer r, Integer h, Integer _2b, Integer _3b, Integer hr, Integer rbi, Integer sb, String cs, Integer bb, Integer so, Integer ibb, String hbp, String sh, String sf, String gidp) {
        super(Battingpost.BATTINGPOST);

        set(0, yearid);
        set(1, round);
        set(2, playerid);
        set(3, teamid);
        set(4, lgid);
        set(5, g);
        set(6, ab);
        set(7, r);
        set(8, h);
        set(9, _2b);
        set(10, _3b);
        set(11, hr);
        set(12, rbi);
        set(13, sb);
        set(14, cs);
        set(15, bb);
        set(16, so);
        set(17, ibb);
        set(18, hbp);
        set(19, sh);
        set(20, sf);
        set(21, gidp);
    }
}
