/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.records;


import io.corbs.baseballdb.schema.tables.Salaries;
import io.corbs.baseballdb.schema.tables.interfaces.ISalaries;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SalariesRecord extends TableRecordImpl<SalariesRecord> implements Record5<Integer, String, String, String, Integer>, ISalaries {

    private static final long serialVersionUID = 475700395;

    /**
     * Setter for <code>baseballdb.Salaries.yearID</code>.
     */
    @Override
    public SalariesRecord setYearid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Salaries.yearID</code>.
     */
    @Override
    public Integer getYearid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>baseballdb.Salaries.teamID</code>.
     */
    @Override
    public SalariesRecord setTeamid(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Salaries.teamID</code>.
     */
    @Override
    public String getTeamid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>baseballdb.Salaries.lgID</code>.
     */
    @Override
    public SalariesRecord setLgid(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Salaries.lgID</code>.
     */
    @Override
    public String getLgid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>baseballdb.Salaries.playerID</code>.
     */
    @Override
    public SalariesRecord setPlayerid(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Salaries.playerID</code>.
     */
    @Override
    public String getPlayerid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>baseballdb.Salaries.salary</code>.
     */
    @Override
    public SalariesRecord setSalary(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Salaries.salary</code>.
     */
    @Override
    public Integer getSalary() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Salaries.SALARIES.YEARID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Salaries.SALARIES.TEAMID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Salaries.SALARIES.LGID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Salaries.SALARIES.PLAYERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Salaries.SALARIES.SALARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getYearid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTeamid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLgid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPlayerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSalary();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalariesRecord value1(Integer value) {
        setYearid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalariesRecord value2(String value) {
        setTeamid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalariesRecord value3(String value) {
        setLgid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalariesRecord value4(String value) {
        setPlayerid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalariesRecord value5(Integer value) {
        setSalary(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalariesRecord values(Integer value1, String value2, String value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISalaries from) {
        setYearid(from.getYearid());
        setTeamid(from.getTeamid());
        setLgid(from.getLgid());
        setPlayerid(from.getPlayerid());
        setSalary(from.getSalary());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISalaries> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalariesRecord
     */
    public SalariesRecord() {
        super(Salaries.SALARIES);
    }

    /**
     * Create a detached, initialised SalariesRecord
     */
    public SalariesRecord(Integer yearid, String teamid, String lgid, String playerid, Integer salary) {
        super(Salaries.SALARIES);

        set(0, yearid);
        set(1, teamid);
        set(2, lgid);
        set(3, playerid);
        set(4, salary);
    }
}
