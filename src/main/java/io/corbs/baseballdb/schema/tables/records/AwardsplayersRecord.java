/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.records;


import io.corbs.baseballdb.schema.tables.Awardsplayers;
import io.corbs.baseballdb.schema.tables.interfaces.IAwardsplayers;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AwardsplayersRecord extends TableRecordImpl<AwardsplayersRecord> implements Record6<String, String, Integer, String, String, String>, IAwardsplayers {

    private static final long serialVersionUID = -1441292360;

    /**
     * Setter for <code>baseballdb.AwardsPlayers.playerID</code>.
     */
    @Override
    public AwardsplayersRecord setPlayerid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.AwardsPlayers.playerID</code>.
     */
    @Override
    public String getPlayerid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>baseballdb.AwardsPlayers.awardID</code>.
     */
    @Override
    public AwardsplayersRecord setAwardid(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.AwardsPlayers.awardID</code>.
     */
    @Override
    public String getAwardid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>baseballdb.AwardsPlayers.yearID</code>.
     */
    @Override
    public AwardsplayersRecord setYearid(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.AwardsPlayers.yearID</code>.
     */
    @Override
    public Integer getYearid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>baseballdb.AwardsPlayers.lgID</code>.
     */
    @Override
    public AwardsplayersRecord setLgid(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.AwardsPlayers.lgID</code>.
     */
    @Override
    public String getLgid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>baseballdb.AwardsPlayers.tie</code>.
     */
    @Override
    public AwardsplayersRecord setTie(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.AwardsPlayers.tie</code>.
     */
    @Override
    public String getTie() {
        return (String) get(4);
    }

    /**
     * Setter for <code>baseballdb.AwardsPlayers.notes</code>.
     */
    @Override
    public AwardsplayersRecord setNotes(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.AwardsPlayers.notes</code>.
     */
    @Override
    public String getNotes() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, Integer, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Awardsplayers.AWARDSPLAYERS.PLAYERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Awardsplayers.AWARDSPLAYERS.AWARDID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Awardsplayers.AWARDSPLAYERS.YEARID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Awardsplayers.AWARDSPLAYERS.LGID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Awardsplayers.AWARDSPLAYERS.TIE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Awardsplayers.AWARDSPLAYERS.NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPlayerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAwardid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getYearid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLgid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTie();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord value1(String value) {
        setPlayerid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord value2(String value) {
        setAwardid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord value3(Integer value) {
        setYearid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord value4(String value) {
        setLgid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord value5(String value) {
        setTie(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord value6(String value) {
        setNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AwardsplayersRecord values(String value1, String value2, Integer value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IAwardsplayers from) {
        setPlayerid(from.getPlayerid());
        setAwardid(from.getAwardid());
        setYearid(from.getYearid());
        setLgid(from.getLgid());
        setTie(from.getTie());
        setNotes(from.getNotes());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IAwardsplayers> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AwardsplayersRecord
     */
    public AwardsplayersRecord() {
        super(Awardsplayers.AWARDSPLAYERS);
    }

    /**
     * Create a detached, initialised AwardsplayersRecord
     */
    public AwardsplayersRecord(String playerid, String awardid, Integer yearid, String lgid, String tie, String notes) {
        super(Awardsplayers.AWARDSPLAYERS);

        set(0, playerid);
        set(1, awardid);
        set(2, yearid);
        set(3, lgid);
        set(4, tie);
        set(5, notes);
    }
}
