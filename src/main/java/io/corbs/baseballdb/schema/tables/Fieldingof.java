/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables;


import io.corbs.baseballdb.schema.Baseballdb;
import io.corbs.baseballdb.schema.tables.records.FieldingofRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Fieldingof extends TableImpl<FieldingofRecord> {

    private static final long serialVersionUID = -813223435;

    /**
     * The reference instance of <code>baseballdb.FieldingOF</code>
     */
    public static final Fieldingof FIELDINGOF = new Fieldingof();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FieldingofRecord> getRecordType() {
        return FieldingofRecord.class;
    }

    /**
     * The column <code>baseballdb.FieldingOF.playerID</code>.
     */
    public final TableField<FieldingofRecord, String> PLAYERID = createField("playerID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.FieldingOF.yearID</code>.
     */
    public final TableField<FieldingofRecord, Integer> YEARID = createField("yearID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.FieldingOF.stint</code>.
     */
    public final TableField<FieldingofRecord, Integer> STINT = createField("stint", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.FieldingOF.Glf</code>.
     */
    public final TableField<FieldingofRecord, Integer> GLF = createField("Glf", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.FieldingOF.Gcf</code>.
     */
    public final TableField<FieldingofRecord, Integer> GCF = createField("Gcf", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.FieldingOF.Grf</code>.
     */
    public final TableField<FieldingofRecord, Integer> GRF = createField("Grf", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>baseballdb.FieldingOF</code> table reference
     */
    public Fieldingof() {
        this("FieldingOF", null);
    }

    /**
     * Create an aliased <code>baseballdb.FieldingOF</code> table reference
     */
    public Fieldingof(String alias) {
        this(alias, FIELDINGOF);
    }

    private Fieldingof(String alias, Table<FieldingofRecord> aliased) {
        this(alias, aliased, null);
    }

    private Fieldingof(String alias, Table<FieldingofRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Baseballdb.BASEBALLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Fieldingof as(String alias) {
        return new Fieldingof(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Fieldingof rename(String name) {
        return new Fieldingof(name, null);
    }
}
