/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IPitchingpost extends Serializable {

    /**
     * Setter for <code>baseballdb.PitchingPost.playerID</code>.
     */
    public IPitchingpost setPlayerid(String value);

    /**
     * Getter for <code>baseballdb.PitchingPost.playerID</code>.
     */
    public String getPlayerid();

    /**
     * Setter for <code>baseballdb.PitchingPost.yearID</code>.
     */
    public IPitchingpost setYearid(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.yearID</code>.
     */
    public Integer getYearid();

    /**
     * Setter for <code>baseballdb.PitchingPost.round</code>.
     */
    public IPitchingpost setRound(String value);

    /**
     * Getter for <code>baseballdb.PitchingPost.round</code>.
     */
    public String getRound();

    /**
     * Setter for <code>baseballdb.PitchingPost.teamID</code>.
     */
    public IPitchingpost setTeamid(String value);

    /**
     * Getter for <code>baseballdb.PitchingPost.teamID</code>.
     */
    public String getTeamid();

    /**
     * Setter for <code>baseballdb.PitchingPost.lgID</code>.
     */
    public IPitchingpost setLgid(String value);

    /**
     * Getter for <code>baseballdb.PitchingPost.lgID</code>.
     */
    public String getLgid();

    /**
     * Setter for <code>baseballdb.PitchingPost.W</code>.
     */
    public IPitchingpost setW(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.W</code>.
     */
    public Integer getW();

    /**
     * Setter for <code>baseballdb.PitchingPost.L</code>.
     */
    public IPitchingpost setL(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.L</code>.
     */
    public Integer getL();

    /**
     * Setter for <code>baseballdb.PitchingPost.G</code>.
     */
    public IPitchingpost setG(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.G</code>.
     */
    public Integer getG();

    /**
     * Setter for <code>baseballdb.PitchingPost.GS</code>.
     */
    public IPitchingpost setGs(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.GS</code>.
     */
    public Integer getGs();

    /**
     * Setter for <code>baseballdb.PitchingPost.CG</code>.
     */
    public IPitchingpost setCg(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.CG</code>.
     */
    public Integer getCg();

    /**
     * Setter for <code>baseballdb.PitchingPost.SHO</code>.
     */
    public IPitchingpost setSho(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.SHO</code>.
     */
    public Integer getSho();

    /**
     * Setter for <code>baseballdb.PitchingPost.SV</code>.
     */
    public IPitchingpost setSv(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.SV</code>.
     */
    public Integer getSv();

    /**
     * Setter for <code>baseballdb.PitchingPost.IPouts</code>.
     */
    public IPitchingpost setIpouts(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.IPouts</code>.
     */
    public Integer getIpouts();

    /**
     * Setter for <code>baseballdb.PitchingPost.H</code>.
     */
    public IPitchingpost setH(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.H</code>.
     */
    public Integer getH();

    /**
     * Setter for <code>baseballdb.PitchingPost.ER</code>.
     */
    public IPitchingpost setEr(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.ER</code>.
     */
    public Integer getEr();

    /**
     * Setter for <code>baseballdb.PitchingPost.HR</code>.
     */
    public IPitchingpost setHr(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.HR</code>.
     */
    public Integer getHr();

    /**
     * Setter for <code>baseballdb.PitchingPost.BB</code>.
     */
    public IPitchingpost setBb(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.BB</code>.
     */
    public Integer getBb();

    /**
     * Setter for <code>baseballdb.PitchingPost.SO</code>.
     */
    public IPitchingpost setSo(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.SO</code>.
     */
    public Integer getSo();

    /**
     * Setter for <code>baseballdb.PitchingPost.BAOpp</code>.
     */
    public IPitchingpost setBaopp(Double value);

    /**
     * Getter for <code>baseballdb.PitchingPost.BAOpp</code>.
     */
    public Double getBaopp();

    /**
     * Setter for <code>baseballdb.PitchingPost.ERA</code>.
     */
    public IPitchingpost setEra(String value);

    /**
     * Getter for <code>baseballdb.PitchingPost.ERA</code>.
     */
    public String getEra();

    /**
     * Setter for <code>baseballdb.PitchingPost.IBB</code>.
     */
    public IPitchingpost setIbb(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.IBB</code>.
     */
    public Integer getIbb();

    /**
     * Setter for <code>baseballdb.PitchingPost.WP</code>.
     */
    public IPitchingpost setWp(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.WP</code>.
     */
    public Integer getWp();

    /**
     * Setter for <code>baseballdb.PitchingPost.HBP</code>.
     */
    public IPitchingpost setHbp(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.HBP</code>.
     */
    public Integer getHbp();

    /**
     * Setter for <code>baseballdb.PitchingPost.BK</code>.
     */
    public IPitchingpost setBk(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.BK</code>.
     */
    public Integer getBk();

    /**
     * Setter for <code>baseballdb.PitchingPost.BFP</code>.
     */
    public IPitchingpost setBfp(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.BFP</code>.
     */
    public Integer getBfp();

    /**
     * Setter for <code>baseballdb.PitchingPost.GF</code>.
     */
    public IPitchingpost setGf(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.GF</code>.
     */
    public Integer getGf();

    /**
     * Setter for <code>baseballdb.PitchingPost.R</code>.
     */
    public IPitchingpost setR(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.R</code>.
     */
    public Integer getR();

    /**
     * Setter for <code>baseballdb.PitchingPost.SH</code>.
     */
    public IPitchingpost setSh(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.SH</code>.
     */
    public Integer getSh();

    /**
     * Setter for <code>baseballdb.PitchingPost.SF</code>.
     */
    public IPitchingpost setSf(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.SF</code>.
     */
    public Integer getSf();

    /**
     * Setter for <code>baseballdb.PitchingPost.GIDP</code>.
     */
    public IPitchingpost setGidp(Integer value);

    /**
     * Getter for <code>baseballdb.PitchingPost.GIDP</code>.
     */
    public Integer getGidp();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IPitchingpost
     */
    public void from(io.corbs.baseballdb.schema.tables.interfaces.IPitchingpost from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IPitchingpost
     */
    public <E extends io.corbs.baseballdb.schema.tables.interfaces.IPitchingpost> E into(E into);
}
