/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables;


import io.corbs.baseballdb.schema.Baseballdb;
import io.corbs.baseballdb.schema.tables.records.HomegamesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Homegames extends TableImpl<HomegamesRecord> {

    private static final long serialVersionUID = 543174708;

    /**
     * The reference instance of <code>baseballdb.HomeGames</code>
     */
    public static final Homegames HOMEGAMES = new Homegames();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HomegamesRecord> getRecordType() {
        return HomegamesRecord.class;
    }

    /**
     * The column <code>baseballdb.HomeGames.year.key</code>.
     */
    public final TableField<HomegamesRecord, Integer> YEAR_KEY = createField("year.key", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HomeGames.league.key</code>.
     */
    public final TableField<HomegamesRecord, String> LEAGUE_KEY = createField("league.key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HomeGames.team.key</code>.
     */
    public final TableField<HomegamesRecord, String> TEAM_KEY = createField("team.key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HomeGames.park.key</code>.
     */
    public final TableField<HomegamesRecord, String> PARK_KEY = createField("park.key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HomeGames.span.first</code>.
     */
    public final TableField<HomegamesRecord, String> SPAN_FIRST = createField("span.first", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HomeGames.span.last</code>.
     */
    public final TableField<HomegamesRecord, String> SPAN_LAST = createField("span.last", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.HomeGames.games</code>.
     */
    public final TableField<HomegamesRecord, Integer> GAMES = createField("games", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HomeGames.openings</code>.
     */
    public final TableField<HomegamesRecord, Integer> OPENINGS = createField("openings", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.HomeGames.attendance</code>.
     */
    public final TableField<HomegamesRecord, Integer> ATTENDANCE = createField("attendance", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>baseballdb.HomeGames</code> table reference
     */
    public Homegames() {
        this("HomeGames", null);
    }

    /**
     * Create an aliased <code>baseballdb.HomeGames</code> table reference
     */
    public Homegames(String alias) {
        this(alias, HOMEGAMES);
    }

    private Homegames(String alias, Table<HomegamesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Homegames(String alias, Table<HomegamesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Baseballdb.BASEBALLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Homegames as(String alias) {
        return new Homegames(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Homegames rename(String name) {
        return new Homegames(name, null);
    }
}
