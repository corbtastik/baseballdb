/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.records;


import io.corbs.baseballdb.schema.tables.Pitchingpost;
import io.corbs.baseballdb.schema.tables.interfaces.IPitchingpost;

import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PitchingpostRecord extends TableRecordImpl<PitchingpostRecord> implements IPitchingpost {

    private static final long serialVersionUID = -1622054695;

    /**
     * Setter for <code>baseballdb.PitchingPost.playerID</code>.
     */
    @Override
    public PitchingpostRecord setPlayerid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.playerID</code>.
     */
    @Override
    public String getPlayerid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.yearID</code>.
     */
    @Override
    public PitchingpostRecord setYearid(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.yearID</code>.
     */
    @Override
    public Integer getYearid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.round</code>.
     */
    @Override
    public PitchingpostRecord setRound(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.round</code>.
     */
    @Override
    public String getRound() {
        return (String) get(2);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.teamID</code>.
     */
    @Override
    public PitchingpostRecord setTeamid(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.teamID</code>.
     */
    @Override
    public String getTeamid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.lgID</code>.
     */
    @Override
    public PitchingpostRecord setLgid(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.lgID</code>.
     */
    @Override
    public String getLgid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.W</code>.
     */
    @Override
    public PitchingpostRecord setW(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.W</code>.
     */
    @Override
    public Integer getW() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.L</code>.
     */
    @Override
    public PitchingpostRecord setL(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.L</code>.
     */
    @Override
    public Integer getL() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.G</code>.
     */
    @Override
    public PitchingpostRecord setG(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.G</code>.
     */
    @Override
    public Integer getG() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.GS</code>.
     */
    @Override
    public PitchingpostRecord setGs(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.GS</code>.
     */
    @Override
    public Integer getGs() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.CG</code>.
     */
    @Override
    public PitchingpostRecord setCg(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.CG</code>.
     */
    @Override
    public Integer getCg() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.SHO</code>.
     */
    @Override
    public PitchingpostRecord setSho(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.SHO</code>.
     */
    @Override
    public Integer getSho() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.SV</code>.
     */
    @Override
    public PitchingpostRecord setSv(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.SV</code>.
     */
    @Override
    public Integer getSv() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.IPouts</code>.
     */
    @Override
    public PitchingpostRecord setIpouts(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.IPouts</code>.
     */
    @Override
    public Integer getIpouts() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.H</code>.
     */
    @Override
    public PitchingpostRecord setH(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.H</code>.
     */
    @Override
    public Integer getH() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.ER</code>.
     */
    @Override
    public PitchingpostRecord setEr(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.ER</code>.
     */
    @Override
    public Integer getEr() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.HR</code>.
     */
    @Override
    public PitchingpostRecord setHr(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.HR</code>.
     */
    @Override
    public Integer getHr() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.BB</code>.
     */
    @Override
    public PitchingpostRecord setBb(Integer value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.BB</code>.
     */
    @Override
    public Integer getBb() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.SO</code>.
     */
    @Override
    public PitchingpostRecord setSo(Integer value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.SO</code>.
     */
    @Override
    public Integer getSo() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.BAOpp</code>.
     */
    @Override
    public PitchingpostRecord setBaopp(Double value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.BAOpp</code>.
     */
    @Override
    public Double getBaopp() {
        return (Double) get(18);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.ERA</code>.
     */
    @Override
    public PitchingpostRecord setEra(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.ERA</code>.
     */
    @Override
    public String getEra() {
        return (String) get(19);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.IBB</code>.
     */
    @Override
    public PitchingpostRecord setIbb(Integer value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.IBB</code>.
     */
    @Override
    public Integer getIbb() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.WP</code>.
     */
    @Override
    public PitchingpostRecord setWp(Integer value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.WP</code>.
     */
    @Override
    public Integer getWp() {
        return (Integer) get(21);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.HBP</code>.
     */
    @Override
    public PitchingpostRecord setHbp(Integer value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.HBP</code>.
     */
    @Override
    public Integer getHbp() {
        return (Integer) get(22);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.BK</code>.
     */
    @Override
    public PitchingpostRecord setBk(Integer value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.BK</code>.
     */
    @Override
    public Integer getBk() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.BFP</code>.
     */
    @Override
    public PitchingpostRecord setBfp(Integer value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.BFP</code>.
     */
    @Override
    public Integer getBfp() {
        return (Integer) get(24);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.GF</code>.
     */
    @Override
    public PitchingpostRecord setGf(Integer value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.GF</code>.
     */
    @Override
    public Integer getGf() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.R</code>.
     */
    @Override
    public PitchingpostRecord setR(Integer value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.R</code>.
     */
    @Override
    public Integer getR() {
        return (Integer) get(26);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.SH</code>.
     */
    @Override
    public PitchingpostRecord setSh(Integer value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.SH</code>.
     */
    @Override
    public Integer getSh() {
        return (Integer) get(27);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.SF</code>.
     */
    @Override
    public PitchingpostRecord setSf(Integer value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.SF</code>.
     */
    @Override
    public Integer getSf() {
        return (Integer) get(28);
    }

    /**
     * Setter for <code>baseballdb.PitchingPost.GIDP</code>.
     */
    @Override
    public PitchingpostRecord setGidp(Integer value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.PitchingPost.GIDP</code>.
     */
    @Override
    public Integer getGidp() {
        return (Integer) get(29);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPitchingpost from) {
        setPlayerid(from.getPlayerid());
        setYearid(from.getYearid());
        setRound(from.getRound());
        setTeamid(from.getTeamid());
        setLgid(from.getLgid());
        setW(from.getW());
        setL(from.getL());
        setG(from.getG());
        setGs(from.getGs());
        setCg(from.getCg());
        setSho(from.getSho());
        setSv(from.getSv());
        setIpouts(from.getIpouts());
        setH(from.getH());
        setEr(from.getEr());
        setHr(from.getHr());
        setBb(from.getBb());
        setSo(from.getSo());
        setBaopp(from.getBaopp());
        setEra(from.getEra());
        setIbb(from.getIbb());
        setWp(from.getWp());
        setHbp(from.getHbp());
        setBk(from.getBk());
        setBfp(from.getBfp());
        setGf(from.getGf());
        setR(from.getR());
        setSh(from.getSh());
        setSf(from.getSf());
        setGidp(from.getGidp());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPitchingpost> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PitchingpostRecord
     */
    public PitchingpostRecord() {
        super(Pitchingpost.PITCHINGPOST);
    }

    /**
     * Create a detached, initialised PitchingpostRecord
     */
    public PitchingpostRecord(String playerid, Integer yearid, String round, String teamid, String lgid, Integer w, Integer l, Integer g, Integer gs, Integer cg, Integer sho, Integer sv, Integer ipouts, Integer h, Integer er, Integer hr, Integer bb, Integer so, Double baopp, String era, Integer ibb, Integer wp, Integer hbp, Integer bk, Integer bfp, Integer gf, Integer r, Integer sh, Integer sf, Integer gidp) {
        super(Pitchingpost.PITCHINGPOST);

        set(0, playerid);
        set(1, yearid);
        set(2, round);
        set(3, teamid);
        set(4, lgid);
        set(5, w);
        set(6, l);
        set(7, g);
        set(8, gs);
        set(9, cg);
        set(10, sho);
        set(11, sv);
        set(12, ipouts);
        set(13, h);
        set(14, er);
        set(15, hr);
        set(16, bb);
        set(17, so);
        set(18, baopp);
        set(19, era);
        set(20, ibb);
        set(21, wp);
        set(22, hbp);
        set(23, bk);
        set(24, bfp);
        set(25, gf);
        set(26, r);
        set(27, sh);
        set(28, sf);
        set(29, gidp);
    }
}
