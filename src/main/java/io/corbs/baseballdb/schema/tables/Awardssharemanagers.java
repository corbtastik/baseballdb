/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables;


import io.corbs.baseballdb.schema.Baseballdb;
import io.corbs.baseballdb.schema.tables.records.AwardssharemanagersRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Awardssharemanagers extends TableImpl<AwardssharemanagersRecord> {

    private static final long serialVersionUID = 2020236702;

    /**
     * The reference instance of <code>baseballdb.AwardsShareManagers</code>
     */
    public static final Awardssharemanagers AWARDSSHAREMANAGERS = new Awardssharemanagers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AwardssharemanagersRecord> getRecordType() {
        return AwardssharemanagersRecord.class;
    }

    /**
     * The column <code>baseballdb.AwardsShareManagers.awardID</code>.
     */
    public final TableField<AwardssharemanagersRecord, String> AWARDID = createField("awardID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.AwardsShareManagers.yearID</code>.
     */
    public final TableField<AwardssharemanagersRecord, Integer> YEARID = createField("yearID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.AwardsShareManagers.lgID</code>.
     */
    public final TableField<AwardssharemanagersRecord, String> LGID = createField("lgID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.AwardsShareManagers.playerID</code>.
     */
    public final TableField<AwardssharemanagersRecord, String> PLAYERID = createField("playerID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.AwardsShareManagers.pointsWon</code>.
     */
    public final TableField<AwardssharemanagersRecord, Integer> POINTSWON = createField("pointsWon", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.AwardsShareManagers.pointsMax</code>.
     */
    public final TableField<AwardssharemanagersRecord, Integer> POINTSMAX = createField("pointsMax", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.AwardsShareManagers.votesFirst</code>.
     */
    public final TableField<AwardssharemanagersRecord, Integer> VOTESFIRST = createField("votesFirst", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>baseballdb.AwardsShareManagers</code> table reference
     */
    public Awardssharemanagers() {
        this("AwardsShareManagers", null);
    }

    /**
     * Create an aliased <code>baseballdb.AwardsShareManagers</code> table reference
     */
    public Awardssharemanagers(String alias) {
        this(alias, AWARDSSHAREMANAGERS);
    }

    private Awardssharemanagers(String alias, Table<AwardssharemanagersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Awardssharemanagers(String alias, Table<AwardssharemanagersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Baseballdb.BASEBALLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Awardssharemanagers as(String alias) {
        return new Awardssharemanagers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Awardssharemanagers rename(String name) {
        return new Awardssharemanagers(name, null);
    }
}
