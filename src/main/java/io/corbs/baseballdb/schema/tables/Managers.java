/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables;


import io.corbs.baseballdb.schema.Baseballdb;
import io.corbs.baseballdb.schema.tables.records.ManagersRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Managers extends TableImpl<ManagersRecord> {

    private static final long serialVersionUID = -694790886;

    /**
     * The reference instance of <code>baseballdb.Managers</code>
     */
    public static final Managers MANAGERS = new Managers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ManagersRecord> getRecordType() {
        return ManagersRecord.class;
    }

    /**
     * The column <code>baseballdb.Managers.playerID</code>.
     */
    public final TableField<ManagersRecord, String> PLAYERID = createField("playerID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.Managers.yearID</code>.
     */
    public final TableField<ManagersRecord, Integer> YEARID = createField("yearID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.Managers.teamID</code>.
     */
    public final TableField<ManagersRecord, String> TEAMID = createField("teamID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.Managers.lgID</code>.
     */
    public final TableField<ManagersRecord, String> LGID = createField("lgID", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>baseballdb.Managers.inseason</code>.
     */
    public final TableField<ManagersRecord, Integer> INSEASON = createField("inseason", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.Managers.G</code>.
     */
    public final TableField<ManagersRecord, Integer> G = createField("G", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.Managers.W</code>.
     */
    public final TableField<ManagersRecord, Integer> W = createField("W", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.Managers.L</code>.
     */
    public final TableField<ManagersRecord, Integer> L = createField("L", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.Managers.rank</code>.
     */
    public final TableField<ManagersRecord, Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>baseballdb.Managers.plyrMgr</code>.
     */
    public final TableField<ManagersRecord, String> PLYRMGR = createField("plyrMgr", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>baseballdb.Managers</code> table reference
     */
    public Managers() {
        this("Managers", null);
    }

    /**
     * Create an aliased <code>baseballdb.Managers</code> table reference
     */
    public Managers(String alias) {
        this(alias, MANAGERS);
    }

    private Managers(String alias, Table<ManagersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Managers(String alias, Table<ManagersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Baseballdb.BASEBALLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Managers as(String alias) {
        return new Managers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Managers rename(String name) {
        return new Managers(name, null);
    }
}
