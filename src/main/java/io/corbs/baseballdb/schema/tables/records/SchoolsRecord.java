/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema.tables.records;


import io.corbs.baseballdb.schema.tables.Schools;
import io.corbs.baseballdb.schema.tables.interfaces.ISchools;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolsRecord extends TableRecordImpl<SchoolsRecord> implements Record5<String, String, String, String, String>, ISchools {

    private static final long serialVersionUID = 1292119391;

    /**
     * Setter for <code>baseballdb.Schools.schoolID</code>.
     */
    @Override
    public SchoolsRecord setSchoolid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Schools.schoolID</code>.
     */
    @Override
    public String getSchoolid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>baseballdb.Schools.name_full</code>.
     */
    @Override
    public SchoolsRecord setNameFull(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Schools.name_full</code>.
     */
    @Override
    public String getNameFull() {
        return (String) get(1);
    }

    /**
     * Setter for <code>baseballdb.Schools.city</code>.
     */
    @Override
    public SchoolsRecord setCity(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Schools.city</code>.
     */
    @Override
    public String getCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>baseballdb.Schools.state</code>.
     */
    @Override
    public SchoolsRecord setState(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Schools.state</code>.
     */
    @Override
    public String getState() {
        return (String) get(3);
    }

    /**
     * Setter for <code>baseballdb.Schools.country</code>.
     */
    @Override
    public SchoolsRecord setCountry(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>baseballdb.Schools.country</code>.
     */
    @Override
    public String getCountry() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Schools.SCHOOLS.SCHOOLID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Schools.SCHOOLS.NAME_FULL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Schools.SCHOOLS.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Schools.SCHOOLS.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Schools.SCHOOLS.COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getSchoolid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNameFull();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolsRecord value1(String value) {
        setSchoolid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolsRecord value2(String value) {
        setNameFull(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolsRecord value3(String value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolsRecord value4(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolsRecord value5(String value) {
        setCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolsRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISchools from) {
        setSchoolid(from.getSchoolid());
        setNameFull(from.getNameFull());
        setCity(from.getCity());
        setState(from.getState());
        setCountry(from.getCountry());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISchools> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchoolsRecord
     */
    public SchoolsRecord() {
        super(Schools.SCHOOLS);
    }

    /**
     * Create a detached, initialised SchoolsRecord
     */
    public SchoolsRecord(String schoolid, String nameFull, String city, String state, String country) {
        super(Schools.SCHOOLS);

        set(0, schoolid);
        set(1, nameFull);
        set(2, city);
        set(3, state);
        set(4, country);
    }
}
