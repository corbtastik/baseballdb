/*
 * This file is generated by jOOQ.
*/
package io.corbs.baseballdb.schema;


import io.corbs.baseballdb.schema.tables.Allstarfull;
import io.corbs.baseballdb.schema.tables.Appearances;
import io.corbs.baseballdb.schema.tables.Awardsmanagers;
import io.corbs.baseballdb.schema.tables.Awardsplayers;
import io.corbs.baseballdb.schema.tables.Awardssharemanagers;
import io.corbs.baseballdb.schema.tables.Awardsshareplayers;
import io.corbs.baseballdb.schema.tables.Batting;
import io.corbs.baseballdb.schema.tables.Battingpost;
import io.corbs.baseballdb.schema.tables.Collegeplaying;
import io.corbs.baseballdb.schema.tables.Fielding;
import io.corbs.baseballdb.schema.tables.Fieldingof;
import io.corbs.baseballdb.schema.tables.Fieldingofsplit;
import io.corbs.baseballdb.schema.tables.Fieldingpost;
import io.corbs.baseballdb.schema.tables.Halloffame;
import io.corbs.baseballdb.schema.tables.Homegames;
import io.corbs.baseballdb.schema.tables.Managers;
import io.corbs.baseballdb.schema.tables.Managershalf;
import io.corbs.baseballdb.schema.tables.Master;
import io.corbs.baseballdb.schema.tables.Parks;
import io.corbs.baseballdb.schema.tables.Pitching;
import io.corbs.baseballdb.schema.tables.Pitchingpost;
import io.corbs.baseballdb.schema.tables.Salaries;
import io.corbs.baseballdb.schema.tables.SchemaVersion;
import io.corbs.baseballdb.schema.tables.Schools;
import io.corbs.baseballdb.schema.tables.Seriespost;
import io.corbs.baseballdb.schema.tables.Teams;
import io.corbs.baseballdb.schema.tables.Teamsfranchises;
import io.corbs.baseballdb.schema.tables.Teamshalf;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Baseballdb extends SchemaImpl {

    private static final long serialVersionUID = -2024333181;

    /**
     * The reference instance of <code>baseballdb</code>
     */
    public static final Baseballdb BASEBALLDB = new Baseballdb();

    /**
     * The table <code>baseballdb.AllstarFull</code>.
     */
    public final Allstarfull ALLSTARFULL = io.corbs.baseballdb.schema.tables.Allstarfull.ALLSTARFULL;

    /**
     * The table <code>baseballdb.Appearances</code>.
     */
    public final Appearances APPEARANCES = io.corbs.baseballdb.schema.tables.Appearances.APPEARANCES;

    /**
     * The table <code>baseballdb.AwardsManagers</code>.
     */
    public final Awardsmanagers AWARDSMANAGERS = io.corbs.baseballdb.schema.tables.Awardsmanagers.AWARDSMANAGERS;

    /**
     * The table <code>baseballdb.AwardsPlayers</code>.
     */
    public final Awardsplayers AWARDSPLAYERS = io.corbs.baseballdb.schema.tables.Awardsplayers.AWARDSPLAYERS;

    /**
     * The table <code>baseballdb.AwardsShareManagers</code>.
     */
    public final Awardssharemanagers AWARDSSHAREMANAGERS = io.corbs.baseballdb.schema.tables.Awardssharemanagers.AWARDSSHAREMANAGERS;

    /**
     * The table <code>baseballdb.AwardsSharePlayers</code>.
     */
    public final Awardsshareplayers AWARDSSHAREPLAYERS = io.corbs.baseballdb.schema.tables.Awardsshareplayers.AWARDSSHAREPLAYERS;

    /**
     * The table <code>baseballdb.Batting</code>.
     */
    public final Batting BATTING = io.corbs.baseballdb.schema.tables.Batting.BATTING;

    /**
     * The table <code>baseballdb.BattingPost</code>.
     */
    public final Battingpost BATTINGPOST = io.corbs.baseballdb.schema.tables.Battingpost.BATTINGPOST;

    /**
     * The table <code>baseballdb.CollegePlaying</code>.
     */
    public final Collegeplaying COLLEGEPLAYING = io.corbs.baseballdb.schema.tables.Collegeplaying.COLLEGEPLAYING;

    /**
     * The table <code>baseballdb.Fielding</code>.
     */
    public final Fielding FIELDING = io.corbs.baseballdb.schema.tables.Fielding.FIELDING;

    /**
     * The table <code>baseballdb.FieldingOF</code>.
     */
    public final Fieldingof FIELDINGOF = io.corbs.baseballdb.schema.tables.Fieldingof.FIELDINGOF;

    /**
     * The table <code>baseballdb.FieldingOFsplit</code>.
     */
    public final Fieldingofsplit FIELDINGOFSPLIT = io.corbs.baseballdb.schema.tables.Fieldingofsplit.FIELDINGOFSPLIT;

    /**
     * The table <code>baseballdb.FieldingPost</code>.
     */
    public final Fieldingpost FIELDINGPOST = io.corbs.baseballdb.schema.tables.Fieldingpost.FIELDINGPOST;

    /**
     * The table <code>baseballdb.HallOfFame</code>.
     */
    public final Halloffame HALLOFFAME = io.corbs.baseballdb.schema.tables.Halloffame.HALLOFFAME;

    /**
     * The table <code>baseballdb.HomeGames</code>.
     */
    public final Homegames HOMEGAMES = io.corbs.baseballdb.schema.tables.Homegames.HOMEGAMES;

    /**
     * The table <code>baseballdb.Managers</code>.
     */
    public final Managers MANAGERS = io.corbs.baseballdb.schema.tables.Managers.MANAGERS;

    /**
     * The table <code>baseballdb.ManagersHalf</code>.
     */
    public final Managershalf MANAGERSHALF = io.corbs.baseballdb.schema.tables.Managershalf.MANAGERSHALF;

    /**
     * The table <code>baseballdb.Master</code>.
     */
    public final Master MASTER = io.corbs.baseballdb.schema.tables.Master.MASTER;

    /**
     * The table <code>baseballdb.Parks</code>.
     */
    public final Parks PARKS = io.corbs.baseballdb.schema.tables.Parks.PARKS;

    /**
     * The table <code>baseballdb.Pitching</code>.
     */
    public final Pitching PITCHING = io.corbs.baseballdb.schema.tables.Pitching.PITCHING;

    /**
     * The table <code>baseballdb.PitchingPost</code>.
     */
    public final Pitchingpost PITCHINGPOST = io.corbs.baseballdb.schema.tables.Pitchingpost.PITCHINGPOST;

    /**
     * The table <code>baseballdb.Salaries</code>.
     */
    public final Salaries SALARIES = io.corbs.baseballdb.schema.tables.Salaries.SALARIES;

    /**
     * The table <code>baseballdb.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = io.corbs.baseballdb.schema.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>baseballdb.Schools</code>.
     */
    public final Schools SCHOOLS = io.corbs.baseballdb.schema.tables.Schools.SCHOOLS;

    /**
     * The table <code>baseballdb.SeriesPost</code>.
     */
    public final Seriespost SERIESPOST = io.corbs.baseballdb.schema.tables.Seriespost.SERIESPOST;

    /**
     * The table <code>baseballdb.Teams</code>.
     */
    public final Teams TEAMS = io.corbs.baseballdb.schema.tables.Teams.TEAMS;

    /**
     * The table <code>baseballdb.TeamsFranchises</code>.
     */
    public final Teamsfranchises TEAMSFRANCHISES = io.corbs.baseballdb.schema.tables.Teamsfranchises.TEAMSFRANCHISES;

    /**
     * The table <code>baseballdb.TeamsHalf</code>.
     */
    public final Teamshalf TEAMSHALF = io.corbs.baseballdb.schema.tables.Teamshalf.TEAMSHALF;

    /**
     * No further instances allowed
     */
    private Baseballdb() {
        super("baseballdb", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Allstarfull.ALLSTARFULL,
            Appearances.APPEARANCES,
            Awardsmanagers.AWARDSMANAGERS,
            Awardsplayers.AWARDSPLAYERS,
            Awardssharemanagers.AWARDSSHAREMANAGERS,
            Awardsshareplayers.AWARDSSHAREPLAYERS,
            Batting.BATTING,
            Battingpost.BATTINGPOST,
            Collegeplaying.COLLEGEPLAYING,
            Fielding.FIELDING,
            Fieldingof.FIELDINGOF,
            Fieldingofsplit.FIELDINGOFSPLIT,
            Fieldingpost.FIELDINGPOST,
            Halloffame.HALLOFFAME,
            Homegames.HOMEGAMES,
            Managers.MANAGERS,
            Managershalf.MANAGERSHALF,
            Master.MASTER,
            Parks.PARKS,
            Pitching.PITCHING,
            Pitchingpost.PITCHINGPOST,
            Salaries.SALARIES,
            SchemaVersion.SCHEMA_VERSION,
            Schools.SCHOOLS,
            Seriespost.SERIESPOST,
            Teams.TEAMS,
            Teamsfranchises.TEAMSFRANCHISES,
            Teamshalf.TEAMSHALF);
    }
}
